{"version":3,"sources":["components/TodoItem.js","components/Todo.js","components/About.js","components/TodoDetails.js","components/AddTodo.js","components/EditTodo.js","components/Login.js","components/Main.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Todoitem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","item","react_default","a","createElement","className","Link","to","concat","id","topic","Component","Todo","toDoData","getTodos","_this2","axios","get","headers","Authorization","sessionStorage","getItem","then","response","setState","data","catch","err","console","log","todoItems","map","todo","i","TodoItem","key","About","TodoDetails","details","input","document","getElementById","html2canvas","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","todoId","match","params","_this3","TodoId","delete","history","push","onClick","printDocument","bind","name","onDelete","AddTodo","newTodo","request","method","url","e","preventDefault","refs","value","addTodo","onSubmit","type","ref","htmlFor","EditTodo","target","defineProperty","editToDo","onChange","handleInputChange","Login","userData","setItem","email","password","loginUser","Main","Switch","Route","exact","path","component","NavBar","href","data-activates","App","Navbar","components_Main","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d49fe3ef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Todoitem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: props.item\n    };\n  }\n  render() {\n    return (\n      <li className=\"collection-item\">\n        <Link to={`/todo/${this.state.item.id}`}>{this.state.item.topic}</Link>\n      </li>\n    );\n  }\n}\n\nexport default Todoitem;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport TodoItem from \"./TodoItem\";\n\nclass Todo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      toDoData: []\n    };\n  }\n\n  componentWillMount() {\n    this.getTodos();\n  }\n  getTodos() {\n    axios\n      .get(\"http://localhost:3000/api/TodoModels\", {\n        headers: { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` }\n      })\n      .then(response => {\n        this.setState(\n          {\n            toDoData: response.data\n          },\n          () => {}\n        );\n      })\n      .catch(err => console.log(err));\n  }\n  render() {\n    const todoItems = this.state.toDoData.map((todo, i) => {\n      return <TodoItem key={todo.id} item={todo} />;\n    });\n    return (\n      <div>\n        <h1> Todo List </h1> <ul className=\"collection\"> {todoItems} </ul>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","import React from \"react\";\n\nconst About = () => (\n  <div>\n    <h1> About </h1>\n  </div>\n);\n\nexport default About;\n","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\n\nclass TodoDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      details: \"\"\n    };\n  }\n\n  componentWillMount() {\n    this.getTodos();\n  }\n  printDocument() {\n    const input = document.getElementById(\"divToPrint\");\n    html2canvas(input).then(canvas => {\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new jsPDF();\n      pdf.addImage(imgData, \"JPEG\", 0, 0);\n      // pdf.output('dataurlnewwindow');\n      pdf.save(\"download.pdf\");\n    });\n  }\n  getTodos() {\n    let todoId = this.props.match.params.id;\n    axios\n      .get(`http://localhost:3000/api/TodoModels/${todoId}`, {\n        headers: { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` }\n      })\n      .then(response => {\n        this.setState({ details: response.data }, () => {\n          console.log(this.state);\n        });\n      })\n      .catch(err => console.log(err));\n  }\n  onDelete() {\n    let TodoId = this.state.details.id;\n\n    axios\n      .delete(`http://localhost:3000/api/TodoModels/${TodoId}`, {\n        headers: { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` }\n      })\n      .then(response => {\n        this.props.history.push(\"/\");\n      })\n      .catch(err => console.log(err));\n  }\n  render() {\n    return (\n      <div>\n        <br />\n        <Link className=\"btn grey\" to=\"/\">\n          Back\n        </Link>\n\n        <h1>\n          {this.state.details.topic}{\" \"}\n          <button\n            onClick={this.printDocument.bind(this)}\n            className=\"btn blue right\"\n          >\n            Export PDF\n          </button>\n        </h1>\n        <div id=\"divToPrint\" className=\"mt4\">\n          <ul className=\"collection\">\n            <li className=\"collection-item\">\n              Topic:{this.state.details.topic}\n            </li>\n            <li className=\"collection-item\">Name:{this.state.details.name}</li>\n          </ul>\n        </div>\n        <Link className=\"btn\" to={`/todo/edit/${this.state.details.id}`}>\n          Edit\n        </Link>\n\n        <button onClick={this.onDelete.bind(this)} className=\"btn red right\">\n          Delete\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default TodoDetails;\n","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass AddTodo extends Component {\n  addTodo(newTodo) {\n    console.log(newTodo);\n    axios\n      .request({\n        method: \"post\",\n        url: \"http://localhost:3000/api/TodoModels\",\n        headers: { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` },\n        data: newTodo\n      })\n      .then(response => {\n        this.props.history.push(\"/\");\n      })\n      .catch(err => console.log(err));\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newTodo = {\n      topic: this.refs.topic.value,\n      name: this.refs.name.value\n    };\n    this.addTodo(newTodo);\n  }\n  render() {\n    return (\n      <div>\n        <br />\n        <Link className=\"btn grey\" to=\"/\">\n          Back\n        </Link>\n        <h1> Add Todo Item</h1>\n        <form onSubmit={this.onSubmit.bind(this)}>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"topic\" ref=\"topic\" />\n            <label htmlFor=\"name\">Topic</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"name\" ref=\"name\" />\n            <label htmlFor=\"todo\">Name</label>\n          </div>\n          <input type=\"submit\" value=\"save\" className=\"btn\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddTodo;\n","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass EditTodo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topic: \"\",\n      name: \"\"\n    };\n  }\n\n  componentWillMount() {\n    this.getTodos();\n  }\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  editToDo(newTodo) {\n    axios\n      .request({\n        method: \"put\",\n        url: `http://localhost:3000/api/TodoModels/${this.state.id}`,\n        headers: { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` },\n        data: newTodo\n      })\n      .then(response => {\n        this.props.history.push(\"/todo\");\n      })\n      .catch(err => console.log(err));\n  }\n  getTodos() {\n    let todoId = this.props.match.params.id;\n    axios\n      .get(`http://localhost:3000/api/TodoModels/${todoId}`, {\n        headers: { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` }\n      })\n      .then(response => {\n        this.setState(\n          {\n            id: response.data.id,\n            topic: response.data.topic,\n            name: response.data.name\n          },\n          () => {\n            console.log(this.state);\n          }\n        );\n      })\n      .catch(err => console.log(err));\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const newTodo = {\n      topic: this.refs.topic.value,\n      name: this.refs.name.value\n    };\n    this.editToDo(newTodo);\n  }\n  render() {\n    return (\n      <div>\n        <br />\n        <Link className=\"btn grey\" to=\"/\">\n          Back\n        </Link>\n        <h1> Edit Todo Item </h1>\n        <form onSubmit={this.onSubmit.bind(this)}>\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"topic\"\n              ref=\"topic\"\n              onChange={this.handleInputChange.bind(this)}\n              value={this.state.topic}\n            />\n            <label htmlFor=\"topic\"> Topic </label>\n          </div>\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              ref=\"name\"\n              onChange={this.handleInputChange.bind(this)}\n              value={this.state.name}\n            />\n            <label htmlFor=\"name\"> Name </label>\n          </div>\n          <input type=\"submit\" value=\"save\" className=\"btn\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditTodo;\n","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  loginUser(userData) {\n    axios\n      .request({\n        method: \"post\",\n        url: \"http://localhost:3000/api/Users/login\",\n        data: userData\n      })\n      .then(response => {\n        sessionStorage.setItem(\"token\", response.data.id);\n        this.props.history.push(\"/todo\");\n      })\n      .catch(err => console.log(err));\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const userData = {\n      email: this.refs.email.value,\n      password: this.refs.password.value\n    };\n    this.loginUser(userData);\n  }\n  render() {\n    return (\n      <div>\n        <br />\n        <h1> Login </h1>\n        <form onSubmit={this.onSubmit.bind(this)}>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"email\" ref=\"email\" />\n            <label htmlFor=\"name\">User</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"password\" name=\"password\" ref=\"password\" />\n            <label htmlFor=\"password\">Password</label>\n          </div>\n          <input type=\"submit\" value=\"Login\" className=\"btn\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Todo from \"./Todo\";\nimport About from \"./About\";\nimport TodoDetails from \"./TodoDetails\";\nimport AddTodo from \"./AddTodo\";\nimport EditTodo from \"./EditTodo\";\nimport Login from \"./Login\";\nimport store from \"./store.js\";\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/todo\" component={Todo} />\n      <Route exact path=\"/about\" component={About} />\n      <Route exact path=\"/todo/add\" component={AddTodo} />\n      <Route exact path=\"/todo/edit/:id\" component={EditTodo} />\n      <Route exact path=\"/todo/:id\" component={TodoDetails} />}\n    </Switch>\n  </main>\n);\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"blue darken-3\">\n          <div className=\"nav-wrapper\">\n            <a href=\"/\" className=\"brand-logo center\">\n              Why ToDo ?\n            </a>\n            <a\n              data-activates=\"main-menu\"\n              className=\"button-collapse show-on-large\"\n            >\n              <i className=\"fa fa-bars\" />\n            </a>\n            <ul className=\"right hide-on-small-only\">\n              <li>\n                <Link to=\"/\">\n                  <i className=\"fa fa-users\" /> Todos\n                </Link>\n              </li>\n            </ul>\n            <ul className=\"side-nav\" id=\"main-menu\">\n              <li>\n                <Link to=\"/\">\n                  <i className=\"fa fa-users\" /> Todos\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/todo/add\">\n                  <i className=\"fa fa-plus\" /> Add Todos\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/about\">\n                  <i className=\"fa fa-question-circle\" /> About\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\nimport NavBar from \"./components/Navbar\";\nimport { Link } from \"react-router-dom\";\n\nconst App = () => (\n  <div>\n    <NavBar />\n    <div className=\"container\">\n      <Main />\n    </div>\n    <div className=\"fixed-action-btn\">\n      <Link to=\"/todo/add\" className=\"btn-floating btn-large red\">\n        <i className=\"fa fa-plus\" />'\n      </Link>\n    </div>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}